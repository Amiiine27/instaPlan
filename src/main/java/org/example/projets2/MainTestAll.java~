package org.example.projets2;

import org.example.projets2.dao.*;
import org.example.projets2.model.*;
import org.example.projets2.util.DatabaseInitializer;

import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;

public class MainTestAll {

    public static void main(String[] args) {
        // 1) Initialisation (création des tables si besoin)
        DatabaseInitializer.initialize();

        try {
            // 2) Création d'un utilisateur de test
            UtilisateurDao userDao = new JdbcUtilisateurDao();
            Utilisateur user = new Utilisateur("caca", "User");
            user.setPassword("pass123");
            userDao.create(user);
            System.out.println("👤 Utilisateur créé :");
            System.out.println("    email    = " + user.getEmail());
            System.out.println("    password = pass123");

            // Créer des utilisateurs avec différents rôles
            Utilisateur admin = new Utilisateur("Admin", "User", "admin123", Role.ADMIN);
            userDao.create(admin);

            Utilisateur enseignant = new Utilisateur("Prof", "User", "prof123", Role.ENSEIGNANT);
            userDao.create(enseignant);

            Utilisateur etudiant = new Utilisateur("Student", "User", "student123", Role.ETUDIANT);
            userDao.create(etudiant);

            // Afficher les informations sur les utilisateurs créés
            System.out.println("👑 Administrateur créé :");
            System.out.println("    email    = " + admin.getEmail());
            System.out.println("    password = admin123");
            System.out.println("    role     = " + admin.getRole().getLibelle());

            System.out.println("🧑‍🏫 Enseignant créé :");
            System.out.println("    email    = " + enseignant.getEmail());
            System.out.println("    password = prof123");
            System.out.println("    role     = " + enseignant.getRole().getLibelle());

            System.out.println("🧑‍🎓 Etudiant créé :");
            System.out.println("    email    = " + etudiant.getEmail());
            System.out.println("    password = student123");
            System.out.println("    role     = " + etudiant.getRole().getLibelle());

            // Tester les méthodes de vérification de rôle
            System.out.println("\n--- Test des méthodes de vérification de rôle ---");
            System.out.println("admin.isAdmin()      = " + admin.isAdmin());
            System.out.println("admin.isEnseignant() = " + admin.isEnseignant());
            System.out.println("admin.isEtudiant()   = " + admin.isEtudiant());

            System.out.println("enseignant.isAdmin()      = " + enseignant.isAdmin());
            System.out.println("enseignant.isEnseignant() = " + enseignant.isEnseignant());
            System.out.println("enseignant.isEtudiant()   = " + enseignant.isEtudiant());

            // 3) Création d'un cours « Test »
            CoursDao coursDao = new JdbcCoursDao();
            Cours cours = new Cours("Cours de Démo", user, 60);
            coursDao.create(cours);
            System.out.println("📚 Cours créé : ID=" + cours.getId() + ", nom=" + cours.getNom());

            // 4) Création d'une salle de test
            SalleDao salleDao = new JdbcSalleDao();
            Salle salle = new Salle("Salle T101", 25, "Projecteur");
            salleDao.create(salle);
            System.out.println("🏫 Salle créée : ID=" + salle.getId() + ", nom=" + salle.getNom());

            // 5) Création de deux créneaux aujourd'hui
            CreneauDao creneauDao = new JdbcCreneauDao();
            Creneau cr1 = new Creneau(
                    LocalDate.now(),
                    LocalTime.of(9,  0),
                    LocalTime.of(10, 0),
                    cours,
                    salle
            );
            creneauDao.create(cr1);
            System.out.println("⏰ Créneau 1 créé : " + cr1.getDate() + " " + cr1.getDebut() + "-" + cr1.getFin());

            Creneau cr2 = new Creneau(
                    LocalDate.now(),
                    LocalTime.of(14, 0),
                    LocalTime.of(15, 30),
                    cours,
                    salle
            );
            creneauDao.create(cr2);
            System.out.println("⏰ Créneau 2 créé : " + cr2.getDate() + " " + cr2.getDebut() + "-" + cr2.getFin());

        } catch (SQLException e) {
            System.err.println("❌ Erreur lors du peuplement : " + e.getMessage());
            e.printStackTrace();
            return;
        }

        System.out.println("✅ Peuplement terminé, tu peux maintenant lancer l'application et te connecter.");
    }
}